### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Mutation {
  todoItemCreate(input: TodoItemCreateInput!): TodoItemCreatePayload!
  todoItemDelete(input: TodoItemDeleteInput!): TodoItemDeletePayload!
  todoItemDone(input: TodoItemDoneInput!): TodoItemDonePayload!
  todoItemUndone(input: TodoItemUndoneInput!): TodoItemUndonePayload!
}

interface Node {
  """Relay Node Id"""
  id: ID!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Query {
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]
  todos(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): TodoItemConnection
}

type TodoItem implements Node {
  content: String!

  """Relay Node Id"""
  id: ID!
  isDone: Boolean!
}

type TodoItemConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [TodoItemEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

input TodoItemCreateInput {
  content: String!
}

type TodoItemCreatePayload {
  todoItem: TodoItem
}

input TodoItemDeleteInput {
  id: ID!
}

type TodoItemDeletePayload {
  deletedItemId: ID
  todoItem: TodoItem
}

input TodoItemDoneInput {
  id: ID!
}

type TodoItemDonePayload {
  todoItem: TodoItem
}

type TodoItemEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: TodoItem
}

input TodoItemUndoneInput {
  id: ID!
}

type TodoItemUndonePayload {
  todoItem: TodoItem
}
